var z=Object.create,c=Object.defineProperty,E=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty,J=Object.getOwnPropertyNames,K=Object.getOwnPropertyDescriptor,S=Object.getOwnPropertySymbols,M=Object.prototype.propertyIsEnumerable;var u=Object.assign,k=e=>c(e,"__esModule",{value:!0});var v=(e,o)=>{var n={};for(var l in e)x.call(e,l)&&o.indexOf(l)<0&&(n[l]=e[l]);if(e!=null&&S)for(var l of S(e))o.indexOf(l)<0&&M.call(e,l)&&(n[l]=e[l]);return n};var Q=(e,o)=>{k(e);for(var n in o)c(e,n,{get:o[n],enumerable:!0})},U=(e,o,n)=>{if(k(e),o&&typeof o=="object"||typeof o=="function")for(let l of J(o))!x.call(e,l)&&l!=="default"&&c(e,l,{get:()=>o[l],enumerable:!(n=K(o,l))||n.enumerable});return e},d=e=>e&&e.__esModule?e:U(c(e!=null?z(E(e)):{},"default",{value:e,enumerable:!0}),e);Q(exports,{SiblingBox:()=>h});var y=d(require("react")),B=d(require("prop-types")),a=d(require("@twilio-paste/styling-library")),P=d(require("@twilio-paste/box")),V=a.styled(P.Box)(({_activeSibling:e,_boxChild:o,_checkedAndActiveSibling:n,_checkedAndDisabledSibling:l,_checkedAndFocusSibling:r,_checkedAndHoverSibling:s,_checkedAndInvalidSibling:p,_checkedAndInvalidAndHoverSibling:b,_checkedSibling:t,_checkedSiblingAndBoxChild:g,_disabledSibling:$,_focusSibling:m,_hoverSibling:A,_invalidSibling:_,_invalidAndHoverSibling:f,type:i="checkbox"})=>{let I=`input[type=${i}]:active + label &`,H=`input[type=${i}]:checked + label &, input[type=${i}][aria-checked=mixed] + label &`,C=`input[type=${i}]:checked:active + label &, input[type=${i}][aria-checked=mixed]:active + label &`,w=`input[type=${i}]:checked + label & > *, input[type=${i}][aria-checked=mixed] + label & > *`,F=`input[type=${i}]:checked:disabled + label &, input[type=${i}][aria-checked=mixed]:disabled + label &`,T=`input[type=${i}]:checked:focus + label &, input[type=${i}][aria-checked=mixed]:focus + label &`,D=`input[type=${i}]:checked:hover:not(:disabled) + label &, input[type=${i}][aria-checked=mixed]:hover:not(:disabled) + label &`,N=`input[type=${i}][aria-invalid=true]:checked + label &`,O=`input[type=${i}][aria-invalid=true]:checked:hover:not(:disabled) + label &`,R=`input[type=${i}] + label & > *`,j=`input[type=${i}]:disabled + label &`,G=`input[type=${i}]:focus + label &`,L=`input[type=${i}]:hover:not(:disabled):not(:checked) + label &`,X=`input[type=${i}][aria-invalid=true] + label &`,q=`input[type=${i}][aria-invalid=true]:hover:not(:disabled) + label &`;return a.css({[I]:e,[H]:t,[C]:n,[w]:g,[F]:l,[T]:r,[D]:s,[N]:p,[O]:b,[R]:o,[j]:$,[G]:m,[L]:A,[X]:_,[q]:f})}),h=t=>{var{"aria-hidden":e="true",alignItems:o="center",display:n="inline-flex",element:l="SIBLING_BOX",flexShrink:r=0,justifyContent:s="center",transition:p="all 120ms"}=t,b=v(t,["aria-hidden","alignItems","display","element","flexShrink","justifyContent","transition"]);return y.createElement(V,u({alignItems:o,"aria-hidden":e,display:n,element:l,flexShrink:r,justifyContent:s,transition:p},b))};h.displayName="SiblingBox";h.propTypes={type:B.oneOf(["checkbox","radio"])};
