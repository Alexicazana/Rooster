var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  __markAsModule(target);
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  if (module2 && module2.__esModule)
    return module2;
  return __exportStar(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", {value: module2, enumerable: true}), module2);
};

// src/index.tsx
__export(exports, {
  Separator: () => Separator
});
var React = __toModule(require("react"));
var PropTypes = __toModule(require("prop-types"));
var import_box = __toModule(require("@twilio-paste/box"));
var import_style_props = __toModule(require("@twilio-paste/style-props"));
var Separator = React.forwardRef((_a, ref) => {
  var {element = "SEPARATOR", orientation, horizontalSpacing, verticalSpacing} = _a, props = __rest(_a, ["element", "orientation", "horizontalSpacing", "verticalSpacing"]);
  return /* @__PURE__ */ React.createElement(import_box.Box, __assign(__assign({}, import_box.safelySpreadBoxProps(props)), {
    "aria-orientation": orientation,
    element,
    margin: "space0",
    marginBottom: verticalSpacing,
    marginLeft: horizontalSpacing,
    marginRight: horizontalSpacing,
    marginTop: verticalSpacing,
    as: "hr",
    borderWidth: "borderWidth0",
    borderColor: "colorBorderWeak",
    borderStyle: "solid",
    borderBottomWidth: orientation === "horizontal" ? "borderWidth10" : null,
    borderLeftWidth: orientation === "vertical" ? "borderWidth10" : null,
    width: orientation === "horizontal" ? "auto" : null,
    height: orientation === "vertical" ? "auto" : null,
    ref
  }));
});
Separator.displayName = "Separator";
Separator.propTypes = {
  element: PropTypes.string,
  orientation: PropTypes.oneOf(["horizontal", "vertical"]).isRequired,
  horizontalSpacing: import_style_props.isMarginTokenProp,
  verticalSpacing: import_style_props.isMarginTokenProp
};
