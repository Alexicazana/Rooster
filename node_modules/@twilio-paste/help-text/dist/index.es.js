var y=Object.prototype.hasOwnProperty;var a=Object.getOwnPropertySymbols,H=Object.prototype.propertyIsEnumerable;var l=Object.assign;var x=(o,i)=>{var t={};for(var e in o)y.call(o,e)&&i.indexOf(e)<0&&(t[e]=o[e]);if(o!=null&&a)for(var e of a(o))i.indexOf(e)<0&&H.call(o,e)&&(t[e]=o[e]);return t};import{createElement as r,forwardRef as V}from"react";import{oneOf as I,string as k}from"prop-types";import{Box as n,safelySpreadBoxProps as P}from"@twilio-paste/box";import{ErrorIcon as c}from"@twilio-paste/icons/esm/ErrorIcon";var p={DEFAULT:"default",ERROR:"error",ERROR_INVERSE:"error_inverse",INVERSE:"inverse"},d={[p.DEFAULT]:{textColor:"colorTextWeak",icon:null},[p.INVERSE]:{textColor:"colorTextInverseWeak",icon:null},[p.ERROR]:{textColor:"colorTextError",icon:r(n,{flexShrink:0},r(c,{color:"colorTextError",decorative:!0,size:"sizeIcon20"}))},[p.ERROR_INVERSE]:{textColor:"colorTextErrorWeak",icon:r(n,{flexShrink:0},r(c,{color:"colorTextErrorWeak",decorative:!0,size:"sizeIcon20"}))}},T=V((s,E)=>{var{marginTop:o,children:i,variant:t="default",element:e="HELP_TEXT"}=s,m=x(s,["marginTop","children","variant","element"]);let{textColor:f,icon:R}=d[t];return r(n,l(l({},P(m)),{display:"flex",columnGap:"space20",marginTop:o||"space30",ref:E,element:e,variant:t,as:"div",color:f,fontSize:"fontSize30",lineHeight:"lineHeight30"}),R,r("span",null,i))});T.displayName="HelpText";export{T as HelpText,p as HelpTextVariants};
