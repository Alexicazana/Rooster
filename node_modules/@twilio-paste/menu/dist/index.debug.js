var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  __markAsModule(target);
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  if (module2 && module2.__esModule)
    return module2;
  return __exportStar(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", {value: module2, enumerable: true}), module2);
};

// src/index.tsx
__export(exports, {
  Menu: () => Menu,
  MenuButton: () => MenuButton,
  MenuGroup: () => MenuGroup,
  MenuGroupContext: () => MenuGroupContext,
  MenuItem: () => MenuItem,
  MenuSeparator: () => MenuSeparator,
  StyledMenuItem: () => StyledMenuItem,
  SubMenuButton: () => SubMenuButton,
  useMenuState: () => import_menu_primitive.useMenuPrimitiveState
});

// src/useMenuState.ts
var import_menu_primitive = __toModule(require("@twilio-paste/menu-primitive"));

// src/Menu.tsx
var React = __toModule(require("react"));
var import_box = __toModule(require("@twilio-paste/box"));
var import_menu_primitive2 = __toModule(require("@twilio-paste/menu-primitive"));
var StyledMenu = React.forwardRef((_a, ref) => {
  var {style} = _a, props = __rest(_a, ["style"]);
  return /* @__PURE__ */ React.createElement(import_box.Box, __assign(__assign({}, import_box.safelySpreadBoxProps(props)), {
    backgroundColor: "colorBackgroundBody",
    borderStyle: "solid",
    borderWidth: "borderWidth10",
    borderColor: "colorBorderWeak",
    borderRadius: "borderRadius20",
    boxShadow: "shadow",
    maxWidth: "size30",
    minWidth: "size20",
    zIndex: "zIndex20",
    paddingY: "space30",
    _focus: {outline: "none"},
    style,
    ref
  }));
});
StyledMenu.displayName = "StyledMenu";
var Menu = React.forwardRef((_a, ref) => {
  var {element = "MENU"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ React.createElement(import_menu_primitive2.MenuPrimitive, __assign(__assign({}, props), {
    element,
    as: StyledMenu,
    ref
  }));
});
Menu.displayName = "Menu";

// src/MenuButton.tsx
var React2 = __toModule(require("react"));
var import_menu_primitive3 = __toModule(require("@twilio-paste/menu-primitive"));
var import_button = __toModule(require("@twilio-paste/button"));
var MenuButton = React2.forwardRef((_a, ref) => {
  var {element = "MENU_BUTTON"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ React2.createElement(import_menu_primitive3.MenuPrimitiveButton, __assign(__assign({}, props), {
    element,
    as: import_button.Button,
    ref
  }), props.children);
});
MenuButton.displayName = "MenuButton";

// src/MenuGroup.tsx
var React3 = __toModule(require("react"));
var import_box2 = __toModule(require("@twilio-paste/box"));
var import_text = __toModule(require("@twilio-paste/text"));

// src/constants.ts
var MenuItemVariants = {
  DEFAULT: "default",
  GROUP_ITEM: "group_item"
};

// src/MenuGroup.tsx
var MenuGroupContext = React3.createContext(MenuItemVariants.DEFAULT);
var MenuGroup = React3.forwardRef((_a, ref) => {
  var {label, icon, children, element = "MENU_GROUP"} = _a, props = __rest(_a, ["label", "icon", "children", "element"]);
  return /* @__PURE__ */ React3.createElement(MenuGroupContext.Provider, {
    value: MenuItemVariants.GROUP_ITEM
  }, /* @__PURE__ */ React3.createElement(import_box2.Box, __assign(__assign({}, import_box2.safelySpreadBoxProps(props)), {
    element,
    role: "presentation",
    "aria-label": label,
    textDecoration: "none",
    ref
  }), /* @__PURE__ */ React3.createElement(import_box2.Box, {
    display: "flex",
    alignItems: "center",
    paddingX: "space70",
    paddingY: "space30",
    cursor: "default"
  }, React3.isValidElement(icon) ? /* @__PURE__ */ React3.createElement(import_box2.Box, {
    flexShrink: 0,
    size: "sizeIcon30"
  }, React3.cloneElement(icon, {color: "colorTextIcon"})) : null, /* @__PURE__ */ React3.createElement(import_text.Text, {
    as: "span",
    color: "colorText",
    role: "presentation",
    fontWeight: "fontWeightBold",
    paddingLeft: icon != null ? "space20" : void 0
  }, label)), children));
});
MenuGroup.displayName = "MenuGroup";

// src/MenuItem.tsx
var React4 = __toModule(require("react"));
var import_anchor = __toModule(require("@twilio-paste/anchor"));
var import_box3 = __toModule(require("@twilio-paste/box"));
var import_menu_primitive4 = __toModule(require("@twilio-paste/menu-primitive"));
var StyledMenuItem = React4.forwardRef((_a, ref) => {
  var {element = "STYLED_MENU_ITEM"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ React4.createElement(import_box3.Box, __assign(__assign(__assign(__assign({}, props.href && import_anchor.secureExternalLink(props.href)), {
    as: props.href ? "a" : "button"
  }), import_box3.safelySpreadBoxProps(props)), {
    element,
    appearance: "none",
    background: "none",
    border: "none",
    color: props["aria-disabled"] ? "colorTextWeaker" : "colorText",
    display: "block",
    textAlign: "left",
    fontFamily: "fontFamilyText",
    fontSize: "fontSize30",
    fontWeight: "fontWeightNormal",
    lineHeight: "lineHeight30",
    margin: "space0",
    outline: "none",
    paddingY: "space30",
    paddingX: props.variant === MenuItemVariants.GROUP_ITEM ? "space90" : "space70",
    textDecoration: props.tabIndex === 0 ? "underline" : "none",
    width: "100%",
    _hover: {
      cursor: "pointer"
    },
    _focus: {
      color: "colorTextLink"
    },
    _disabled: {cursor: "not-allowed"},
    ref
  }), props.children);
});
StyledMenuItem.displayName = "StyledMenuItem";
var MenuItem = React4.forwardRef((_a, ref) => {
  var {as = StyledMenuItem, variant: _variant, element = "MENU_ITEM"} = _a, props = __rest(_a, ["as", "variant", "element"]);
  const variant = _variant || React4.useContext(MenuGroupContext);
  return /* @__PURE__ */ React4.createElement(import_menu_primitive4.MenuPrimitiveItem, __assign(__assign({}, props), {
    element,
    variant,
    as,
    ref
  }));
});
MenuItem.displayName = "MenuItem";

// src/MenuSeparator.tsx
var React5 = __toModule(require("react"));
var import_separator = __toModule(require("@twilio-paste/separator"));
var import_menu_primitive5 = __toModule(require("@twilio-paste/menu-primitive"));
var StyledMenuSeparator = React5.forwardRef((props, ref) => {
  return /* @__PURE__ */ React5.createElement(import_separator.Separator, __assign(__assign({}, props), {
    orientation: "horizontal",
    verticalSpacing: "space40",
    ref
  }));
});
StyledMenuSeparator.displayName = "StyledMenuSeparator";
var MenuSeparator = React5.forwardRef((_a, ref) => {
  var {element = "MENU_SEPARATOR"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ React5.createElement(import_menu_primitive5.MenuPrimitiveSeparator, __assign(__assign({}, props), {
    element,
    as: StyledMenuSeparator,
    ref
  }));
});
MenuSeparator.displayName = "MenuSeparator";

// src/SubMenuButton.tsx
var React6 = __toModule(require("react"));
var import_menu_primitive6 = __toModule(require("@twilio-paste/menu-primitive"));
var import_media_object = __toModule(require("@twilio-paste/media-object"));
var import_ChevronRightIcon = __toModule(require("@twilio-paste/icons/cjs/ChevronRightIcon"));
var SubMenuButton = React6.forwardRef((_a, ref) => {
  var {element = "SUBMENU_BUTTON"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ React6.createElement(import_menu_primitive6.MenuPrimitiveButton, __assign(__assign({}, props), {
    as: StyledMenuItem,
    element,
    ref
  }), /* @__PURE__ */ React6.createElement(import_media_object.MediaObject, {
    as: "span",
    verticalAlign: "center",
    element: `${element}_MEDIA_OBJECT`
  }, props.children && /* @__PURE__ */ React6.createElement(import_media_object.MediaBody, {
    as: "span",
    element: `${element}_MEDIA_BODY`
  }, props.children), /* @__PURE__ */ React6.createElement(import_media_object.MediaFigure, {
    as: "span",
    align: "end",
    spacing: "space20",
    element: `${element}_MEDIA_FIGURE`
  }, /* @__PURE__ */ React6.createElement(import_ChevronRightIcon.ChevronRightIcon, {
    decorative: true,
    size: "sizeIcon30",
    element: `${element}_ICON`
  }))));
});
SubMenuButton.displayName = "SubMenuButton";
