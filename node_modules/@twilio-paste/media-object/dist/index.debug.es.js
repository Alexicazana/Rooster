var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/MediaObject.tsx
import {
  createElement,
  forwardRef
} from "react";
import {
  node,
  oneOf
} from "prop-types";
import {Box, safelySpreadBoxProps} from "@twilio-paste/box";
var MediaObject = forwardRef((_a, ref) => {
  var {as = "span", children, element = "MEDIA_OBJECT", marginBottom, marginTop, verticalAlign = "top"} = _a, props = __rest(_a, ["as", "children", "element", "marginBottom", "marginTop", "verticalAlign"]);
  return /* @__PURE__ */ createElement(Box, __assign(__assign({}, safelySpreadBoxProps(props)), {
    alignItems: verticalAlign === "top" ? "flex-start" : "center",
    as,
    display: "flex",
    element,
    marginBottom,
    marginTop,
    ref
  }), children);
});
MediaObject.displayName = "MediaObject";
MediaObject.propTypes = {
  children: node.isRequired,
  verticalAlign: oneOf(["center", "top"])
};

// src/MediaFigure.tsx
import {
  createElement as createElement2,
  forwardRef as forwardRef2
} from "react";
import {
  node as node2,
  oneOf as oneOf2
} from "prop-types";
import {Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2} from "@twilio-paste/box";
import {isMarginTokenProp} from "@twilio-paste/style-props";
var MediaFigure = forwardRef2((_a, ref) => {
  var {align = "start", as = "span", children, element = "MEDIA_FIGURE", spacing = "space0"} = _a, props = __rest(_a, ["align", "as", "children", "element", "spacing"]);
  return /* @__PURE__ */ createElement2(Box2, __assign(__assign({}, safelySpreadBoxProps2(props)), {
    as,
    display: "flex",
    element,
    flexShrink: 0,
    marginLeft: align === "end" ? spacing : void 0,
    marginRight: align === "start" ? spacing : void 0,
    ref
  }), children);
});
MediaFigure.displayName = "MediaFigure";
MediaFigure.propTypes = {
  align: oneOf2(["start", "end"]),
  children: node2.isRequired,
  spacing: isMarginTokenProp
};

// src/MediaBody.tsx
import {
  createElement as createElement3,
  forwardRef as forwardRef3
} from "react";
import {
  node as node3
} from "prop-types";
import {Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3} from "@twilio-paste/box";
var MediaBody = forwardRef3((_a, ref) => {
  var {as = "span", children, element = "MEDIA_BODY"} = _a, props = __rest(_a, ["as", "children", "element"]);
  return /* @__PURE__ */ createElement3(Box3, __assign(__assign({}, safelySpreadBoxProps3(props)), {
    as,
    element,
    flex: 1,
    minWidth: "size0",
    ref
  }), children);
});
MediaBody.displayName = "MediaBody";
MediaBody.propTypes = {
  children: node3.isRequired
};
export {
  MediaBody,
  MediaFigure,
  MediaObject
};
