var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  __markAsModule(target);
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  if (module2 && module2.__esModule)
    return module2;
  return __exportStar(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", {value: module2, enumerable: true}), module2);
};

// src/index.tsx
__export(exports, {
  MediaBody: () => MediaBody,
  MediaFigure: () => MediaFigure,
  MediaObject: () => MediaObject
});

// src/MediaObject.tsx
var React = __toModule(require("react"));
var PropTypes = __toModule(require("prop-types"));
var import_box = __toModule(require("@twilio-paste/box"));
var MediaObject = React.forwardRef((_a, ref) => {
  var {as = "span", children, element = "MEDIA_OBJECT", marginBottom, marginTop, verticalAlign = "top"} = _a, props = __rest(_a, ["as", "children", "element", "marginBottom", "marginTop", "verticalAlign"]);
  return /* @__PURE__ */ React.createElement(import_box.Box, __assign(__assign({}, import_box.safelySpreadBoxProps(props)), {
    alignItems: verticalAlign === "top" ? "flex-start" : "center",
    as,
    display: "flex",
    element,
    marginBottom,
    marginTop,
    ref
  }), children);
});
MediaObject.displayName = "MediaObject";
MediaObject.propTypes = {
  children: PropTypes.node.isRequired,
  verticalAlign: PropTypes.oneOf(["center", "top"])
};

// src/MediaFigure.tsx
var React2 = __toModule(require("react"));
var PropTypes2 = __toModule(require("prop-types"));
var import_box2 = __toModule(require("@twilio-paste/box"));
var import_style_props = __toModule(require("@twilio-paste/style-props"));
var MediaFigure = React2.forwardRef((_a, ref) => {
  var {align = "start", as = "span", children, element = "MEDIA_FIGURE", spacing = "space0"} = _a, props = __rest(_a, ["align", "as", "children", "element", "spacing"]);
  return /* @__PURE__ */ React2.createElement(import_box2.Box, __assign(__assign({}, import_box2.safelySpreadBoxProps(props)), {
    as,
    display: "flex",
    element,
    flexShrink: 0,
    marginLeft: align === "end" ? spacing : void 0,
    marginRight: align === "start" ? spacing : void 0,
    ref
  }), children);
});
MediaFigure.displayName = "MediaFigure";
MediaFigure.propTypes = {
  align: PropTypes2.oneOf(["start", "end"]),
  children: PropTypes2.node.isRequired,
  spacing: import_style_props.isMarginTokenProp
};

// src/MediaBody.tsx
var React3 = __toModule(require("react"));
var PropTypes3 = __toModule(require("prop-types"));
var import_box3 = __toModule(require("@twilio-paste/box"));
var MediaBody = React3.forwardRef((_a, ref) => {
  var {as = "span", children, element = "MEDIA_BODY"} = _a, props = __rest(_a, ["as", "children", "element"]);
  return /* @__PURE__ */ React3.createElement(import_box3.Box, __assign(__assign({}, import_box3.safelySpreadBoxProps(props)), {
    as,
    element,
    flex: 1,
    minWidth: "size0",
    ref
  }), children);
});
MediaBody.displayName = "MediaBody";
MediaBody.propTypes = {
  children: PropTypes3.node.isRequired
};
