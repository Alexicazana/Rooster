var h=Object.prototype.hasOwnProperty;var y=Object.getOwnPropertySymbols,L=Object.prototype.propertyIsEnumerable;var i=Object.assign;var l=(e,t)=>{var r={};for(var o in e)h.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(e!=null&&y)for(var o of y(e))t.indexOf(o)<0&&L.call(e,o)&&(r[o]=e[o]);return r};import{createElement as p,forwardRef as v}from"react";import{bool as g,oneOf as m,string as R}from"prop-types";import{Box as M,safelySpreadBoxProps as O}from"@twilio-paste/box";import{MediaObject as C,MediaFigure as E,MediaBody as k}from"@twilio-paste/media-object";import{createElement as d}from"react";import{string as q}from"prop-types";import{Box as u,safelySpreadBoxProps as D}from"@twilio-paste/box";import{ScreenReaderOnly as w}from"@twilio-paste/screen-reader-only";var a=r=>{var{element:e="REQUIRED_DOT"}=r,t=l(r,["element"]);return d(u,i(i({},D(t)),{alignItems:"center",justifyContent:"center",as:"span",cursor:"pointer",display:"flex",height:"sizeIcon30",element:`${e}_WRAPPER`}),d(u,{as:"span",backgroundColor:"colorBackgroundRequired",borderRadius:"borderRadiusCircle",display:"block",height:"4px",width:"4px",element:e},d(w,null,"Required: ")))};a.displayName="RequiredDot";a.propTypes={element:q};var c=v((x,B)=>{var{as:e="label",marginBottom:t,required:r,disabled:o,children:T,variant:f,element:b="LABEL"}=x,P=l(x,["as","marginBottom","required","disabled","children","variant","element"]);let s="colorText";o&&f==="inverse"?s="colorTextInverseWeak":o?s="colorTextWeak":f==="inverse"&&(s="colorTextInverse");let n="pointer";return o?n="not-allowed":e==="legend"&&(n="default"),p(M,i(i({},O(P)),{as:e,borderBottomWidth:"borderWidth0",display:"block",marginBottom:t||"space20",paddingLeft:"space0",paddingRight:"space0",textTransform:"none",element:b,fontSize:"fontSize30",fontWeight:"fontWeightBold",lineHeight:"lineHeight30",color:s,cursor:n,ref:B}),p(C,{verticalAlign:"top"},r&&p(E,{spacing:"space20"},p(a,{element:`${b}_REQUIRED_DOT`})),p(k,null,T)))});c.displayName="Label";c.propTypes={as:m(["label","legend"]),disabled:g,element:R,htmlFor:R,marginBottom:m(["space0"]),required:g,variant:m(["default","inverse"])};export{c as Label,a as RequiredDot};
