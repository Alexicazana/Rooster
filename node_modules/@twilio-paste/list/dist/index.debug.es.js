var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/List.tsx
import {
  createElement,
  forwardRef
} from "react";
import {
  oneOf,
  string
} from "prop-types";
import {Text} from "@twilio-paste/text";
import {isMarginTokenProp} from "@twilio-paste/style-props";
var List = forwardRef((_a, ref) => {
  var {as, children, element = "LIST"} = _a, props = __rest(_a, ["as", "children", "element"]);
  return /* @__PURE__ */ createElement(Text, __assign(__assign({}, props), {
    as,
    color: "colorText",
    element,
    fontSize: "fontSize30",
    fontWeight: "fontWeightNormal",
    lineHeight: "lineHeight40",
    marginLeft: "space70",
    ref
  }), children);
});
List.displayName = "List";
List.propTypes = {
  as: oneOf(["ol", "ul"]).isRequired,
  element: string,
  marginTop: isMarginTokenProp,
  marginBottom: isMarginTokenProp
};

// src/ListItem.tsx
import {
  createElement as createElement2,
  forwardRef as forwardRef2
} from "react";
import {
  string as string2
} from "prop-types";
import {Text as Text2, safelySpreadTextProps} from "@twilio-paste/text";
var ListItem = forwardRef2((_a, ref) => {
  var {children, element = "LIST_ITEM"} = _a, props = __rest(_a, ["children", "element"]);
  return /* @__PURE__ */ createElement2(Text2, __assign(__assign({}, safelySpreadTextProps(props)), {
    as: "li",
    color: "colorText",
    element,
    fontSize: "fontSize30",
    fontWeight: "fontWeightNormal",
    lineHeight: "lineHeight40",
    marginBottom: "space30",
    marginTop: "space30",
    ref
  }), children);
});
ListItem.displayName = "ListItem";
ListItem.propTypes = {
  element: string2
};

// src/OrderedList.tsx
import {
  createElement as createElement3,
  forwardRef as forwardRef3
} from "react";
import {
  string as string3
} from "prop-types";
import {safelySpreadTextProps as safelySpreadTextProps2} from "@twilio-paste/text";
import {isMarginTokenProp as isMarginTokenProp2} from "@twilio-paste/style-props";
var OrderedList = forwardRef3((_a, ref) => {
  var {children, element = "ORDERED_LIST", marginTop, marginBottom = "space70"} = _a, props = __rest(_a, ["children", "element", "marginTop", "marginBottom"]);
  return /* @__PURE__ */ createElement3(List, __assign(__assign({}, safelySpreadTextProps2(props)), {
    as: "ol",
    element,
    marginTop,
    marginBottom,
    ref
  }), children);
});
OrderedList.displayName = "OrderedList";
OrderedList.propTypes = {
  element: string3,
  marginTop: isMarginTokenProp2,
  marginBottom: isMarginTokenProp2
};

// src/UnorderedList.tsx
import {
  createElement as createElement4,
  forwardRef as forwardRef4
} from "react";
import {
  string as string4
} from "prop-types";
import {safelySpreadTextProps as safelySpreadTextProps3} from "@twilio-paste/text";
import {isMarginTokenProp as isMarginTokenProp3} from "@twilio-paste/style-props";
var UnorderedList = forwardRef4((_a, ref) => {
  var {children, element = "UNORDERED_LIST", marginTop, marginBottom = "space70"} = _a, props = __rest(_a, ["children", "element", "marginTop", "marginBottom"]);
  return /* @__PURE__ */ createElement4(List, __assign(__assign({}, safelySpreadTextProps3(props)), {
    as: "ul",
    element,
    marginTop,
    marginBottom,
    ref
  }), children);
});
UnorderedList.displayName = "UnorderedList";
UnorderedList.propTypes = {
  element: string4,
  marginTop: isMarginTokenProp3,
  marginBottom: isMarginTokenProp3
};
export {
  List,
  ListItem,
  OrderedList,
  UnorderedList
};
