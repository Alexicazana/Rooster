var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/index.tsx
import {
  createElement,
  forwardRef
} from "react";
import {
  oneOf,
  string
} from "prop-types";
import {Text, safelySpreadTextProps} from "@twilio-paste/text";
var Paragraph = forwardRef((_a, ref) => {
  var {children, element = "PARAGRAPH", marginBottom} = _a, props = __rest(_a, ["children", "element", "marginBottom"]);
  return /* @__PURE__ */ createElement(Text, __assign(__assign({}, safelySpreadTextProps(props)), {
    as: "p",
    color: "colorText",
    element,
    fontSize: "fontSize30",
    fontWeight: "fontWeightNormal",
    lineHeight: "lineHeight40",
    marginBottom: marginBottom || "space70",
    ref
  }), children);
});
Paragraph.displayName = "Paragraph";
Paragraph.propTypes = {
  element: string,
  marginBottom: oneOf(["space0"])
};
export {
  Paragraph
};
