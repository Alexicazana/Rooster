var v=Object.prototype.hasOwnProperty;var T=Object.getOwnPropertySymbols,w=Object.prototype.propertyIsEnumerable;var o=Object.assign;var a=(e,i)=>{var r={};for(var t in e)v.call(e,t)&&i.indexOf(t)<0&&(r[t]=e[t]);if(e!=null&&T)for(var t of T(e))i.indexOf(t)<0&&w.call(e,t)&&(r[t]=e[t]);return r};import{Children as B,Fragment as g,cloneElement as h,createElement as p,forwardRef as c}from"react";import{element as $,string as F}from"prop-types";import{useUID as I}from"@twilio-paste/uid-library";import{Box as A,safelySpreadBoxProps as k}from"@twilio-paste/box";import{StyledBase as E}from"@twilio-paste/theme";import{Text as N}from"@twilio-paste/text";import{useTooltipPrimitiveState as f,TooltipPrimitive as z,TooltipPrimitiveReference as C}from"@twilio-paste/tooltip-primitive";import{createElement as R}from"react";import{TooltipPrimitiveArrow as S}from"@twilio-paste/tooltip-primitive";import{useTheme as b}from"@twilio-paste/theme";var m=e=>{let i=b();return R(S,o(o({},e),{size:i.fontSizes.fontSize50,stroke:i.borderColors.colorBorderStrong,fill:i.backgroundColors.colorBackgroundBodyInverse}))};m.displayName="TooltipArrow";var P=c((l,t)=>{var{style:e,element:i}=l,r=a(l,["style","element"]);return p(A,o(o({},k(r)),{backgroundColor:"colorBackgroundBodyInverse",borderColor:"colorBorderStrong",borderRadius:"borderRadius20",borderStyle:"solid",borderWidth:"borderWidth10",boxShadow:"shadow",element:i,maxWidth:"size30",padding:"space30",paddingBottom:"space20",paddingTop:"space20",zIndex:"zIndex90",_focus:{outline:"none"},style:e,ref:t}))});P.displayName="StyledTooltip";var y=c((d,x)=>{var{baseId:e,children:i,element:r="TOOLTIP",state:t,text:l}=d,n=a(d,["baseId","children","element","state","text"]);let s=t||f(o({baseId:`paste-tooltip-${I()}`},n));return p(g,null,B.only(p(C,o(o(o({},s),{ref:x}),i.props),u=>h(i,u))),p(z,o(o(o({element:r},s),n),{as:P}),p(E,null,p(m,o({},s)),p(N,{element:`${r}_TEXT`,as:"span",color:"colorTextInverse"},l))))});y.displayName="Tooltip";export{y as Tooltip,f as useTooltipState};
