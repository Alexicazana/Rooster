var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  __markAsModule(target);
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  if (module2 && module2.__esModule)
    return module2;
  return __exportStar(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", {value: module2, enumerable: true}), module2);
};

// src/index.tsx
__export(exports, {
  Alert: () => Alert,
  AlertBackgroundColors: () => AlertBackgroundColors,
  AlertBorderColors: () => AlertBorderColors,
  AlertRoles: () => AlertRoles,
  AlertVariants: () => AlertVariants
});
var React = __toModule(require("react"));
var PropTypes = __toModule(require("prop-types"));
var import_box = __toModule(require("@twilio-paste/box"));
var import_media_object = __toModule(require("@twilio-paste/media-object"));
var import_button = __toModule(require("@twilio-paste/button"));
var import_CloseIcon = __toModule(require("@twilio-paste/icons/cjs/CloseIcon"));
var import_ErrorIcon = __toModule(require("@twilio-paste/icons/cjs/ErrorIcon"));
var import_NeutralIcon = __toModule(require("@twilio-paste/icons/cjs/NeutralIcon"));
var import_WarningIcon = __toModule(require("@twilio-paste/icons/cjs/WarningIcon"));
var AlertRoles = {
  ERROR: "alert",
  NEUTRAL: "status",
  WARNING: "alert"
};
var AlertVariants = {
  ERROR: "error",
  NEUTRAL: "neutral",
  WARNING: "warning"
};
var AlertBackgroundColors = {
  ERROR: "colorBackgroundErrorWeakest",
  NEUTRAL: "colorBackgroundNeutralWeakest",
  WARNING: "colorBackgroundWarningWeakest"
};
var AlertBorderColors = {
  ERROR: "colorBorderErrorWeak",
  NEUTRAL: "colorBorderNeutral",
  WARNING: "colorBorderWarningWeak"
};
var renderAlertIcon = (variant, element) => {
  switch (variant) {
    case AlertVariants.ERROR:
      return /* @__PURE__ */ React.createElement(import_ErrorIcon.ErrorIcon, {
        element: `${element}_ICON`,
        color: "colorTextIconError",
        decorative: false,
        title: "error: ",
        size: "sizeIcon20"
      });
    case AlertVariants.WARNING:
      return /* @__PURE__ */ React.createElement(import_WarningIcon.WarningIcon, {
        element: `${element}_ICON`,
        color: "colorTextIconWarning",
        decorative: false,
        title: "warning: ",
        size: "sizeIcon20"
      });
    case AlertVariants.NEUTRAL:
    default:
      return /* @__PURE__ */ React.createElement(import_NeutralIcon.NeutralIcon, {
        element: `${element}_ICON`,
        color: "colorTextIconNeutral",
        decorative: false,
        title: "information: ",
        size: "sizeIcon20"
      });
  }
};
var Alert = React.forwardRef((_a, ref) => {
  var {children, onDismiss, variant, role, element = "ALERT"} = _a, props = __rest(_a, ["children", "onDismiss", "variant", "role", "element"]);
  return /* @__PURE__ */ React.createElement(import_box.Box, __assign(__assign({}, import_box.safelySpreadBoxProps(props)), {
    backgroundColor: AlertBackgroundColors[variant.toUpperCase()],
    borderColor: AlertBorderColors[variant.toUpperCase()],
    borderBottomWidth: "borderWidth20",
    borderBottomStyle: "solid",
    paddingLeft: "space60",
    paddingRight: "space60",
    paddingTop: "space50",
    paddingBottom: "space50",
    element,
    variant,
    ref,
    role: role != null ? role : AlertRoles[variant.toUpperCase()]
  }), /* @__PURE__ */ React.createElement(import_media_object.MediaObject, {
    as: "div"
  }, /* @__PURE__ */ React.createElement(import_media_object.MediaFigure, {
    as: "div",
    spacing: "space30"
  }, renderAlertIcon(variant, element)), /* @__PURE__ */ React.createElement(import_media_object.MediaBody, {
    as: "div"
  }, children), onDismiss && typeof onDismiss === "function" && /* @__PURE__ */ React.createElement(import_media_object.MediaFigure, {
    align: "end",
    spacing: "space60"
  }, /* @__PURE__ */ React.createElement(import_button.Button, {
    onClick: onDismiss,
    variant: "secondary_icon",
    size: "reset",
    element: `${element}_DISMISS_BUTTON`
  }, /* @__PURE__ */ React.createElement(import_CloseIcon.CloseIcon, {
    element: `${element}_DISMISS_ICON`,
    color: "colorTextIcon",
    decorative: false,
    title: "Dismiss alert",
    size: "sizeIcon20"
  })))));
});
Alert.displayName = "Alert";
Alert.propTypes = {
  children: PropTypes.node.isRequired,
  onDismiss: PropTypes.func,
  role: PropTypes.string,
  variant: PropTypes.oneOf(Object.values(AlertVariants)).isRequired,
  element: PropTypes.string
};
