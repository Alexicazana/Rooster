var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  __markAsModule(target);
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  if (module2 && module2.__esModule)
    return module2;
  return __exportStar(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", {value: module2, enumerable: true}), module2);
};

// src/index.tsx
__export(exports, {
  DisplayPill: () => DisplayPill,
  DisplayPillGroup: () => DisplayPillGroup
});

// src/DisplayPill.tsx
var React = __toModule(require("react"));
var import_box = __toModule(require("@twilio-paste/box"));
var import_anchor = __toModule(require("@twilio-paste/anchor"));
var DisplayPill = React.forwardRef((_a, ref) => {
  var {element = "DISPLAY_PILL"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ React.createElement(import_box.Box, {
    as: "li",
    listStyleType: "none"
  }, /* @__PURE__ */ React.createElement(import_box.Box, __assign(__assign(__assign({}, import_box.safelySpreadBoxProps(props)), props.href ? import_anchor.secureExternalLink(props.href) : {}), {
    ref,
    element,
    as: props.href ? "a" : "div",
    alignItems: "center",
    backgroundColor: "colorBackgroundStrong",
    borderRadius: "borderRadius10",
    color: props.href ? "colorTextLinkStrong" : "colorText",
    columnGap: "space20",
    cursor: props.href ? "pointer" : "default",
    display: "flex",
    fontSize: "fontSize20",
    fontWeight: "fontWeightSemibold",
    lineHeight: "lineHeight10",
    paddingX: "space30",
    paddingY: "space20",
    outline: "none",
    _hover: {
      textDecoration: "none"
    },
    _focusVisible: {
      backgroundColor: "colorBackgroundPrimaryWeakest",
      boxShadow: "shadowFocus",
      color: "colorTextLinkStronger"
    }
  }), props.children));
});
DisplayPill.displayName = "DisplayPill";

// src/DisplayPillGroup.tsx
var React2 = __toModule(require("react"));
var import_box2 = __toModule(require("@twilio-paste/box"));
var DisplayPillGroup = React2.forwardRef((_a, ref) => {
  var {element = "DISPLAY_PILL_GROUP"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ React2.createElement(import_box2.Box, __assign(__assign({}, import_box2.safelySpreadBoxProps(props)), {
    element,
    ref,
    as: "ul",
    margin: "space0",
    padding: "space0",
    display: "flex",
    flexWrap: "wrap",
    rowGap: "space30",
    columnGap: "space30"
  }), props.children);
});
DisplayPillGroup.displayName = "DisplayPillGroup";
