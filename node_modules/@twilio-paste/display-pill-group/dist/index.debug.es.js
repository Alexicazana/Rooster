var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/DisplayPill.tsx
import {
  createElement,
  forwardRef
} from "react";
import {Box, safelySpreadBoxProps} from "@twilio-paste/box";
import {secureExternalLink} from "@twilio-paste/anchor";
var DisplayPill = forwardRef((_a, ref) => {
  var {element = "DISPLAY_PILL"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ createElement(Box, {
    as: "li",
    listStyleType: "none"
  }, /* @__PURE__ */ createElement(Box, __assign(__assign(__assign({}, safelySpreadBoxProps(props)), props.href ? secureExternalLink(props.href) : {}), {
    ref,
    element,
    as: props.href ? "a" : "div",
    alignItems: "center",
    backgroundColor: "colorBackgroundStrong",
    borderRadius: "borderRadius10",
    color: props.href ? "colorTextLinkStrong" : "colorText",
    columnGap: "space20",
    cursor: props.href ? "pointer" : "default",
    display: "flex",
    fontSize: "fontSize20",
    fontWeight: "fontWeightSemibold",
    lineHeight: "lineHeight10",
    paddingX: "space30",
    paddingY: "space20",
    outline: "none",
    _hover: {
      textDecoration: "none"
    },
    _focusVisible: {
      backgroundColor: "colorBackgroundPrimaryWeakest",
      boxShadow: "shadowFocus",
      color: "colorTextLinkStronger"
    }
  }), props.children));
});
DisplayPill.displayName = "DisplayPill";

// src/DisplayPillGroup.tsx
import {
  createElement as createElement2,
  forwardRef as forwardRef2
} from "react";
import {Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2} from "@twilio-paste/box";
var DisplayPillGroup = forwardRef2((_a, ref) => {
  var {element = "DISPLAY_PILL_GROUP"} = _a, props = __rest(_a, ["element"]);
  return /* @__PURE__ */ createElement2(Box2, __assign(__assign({}, safelySpreadBoxProps2(props)), {
    element,
    ref,
    as: "ul",
    margin: "space0",
    padding: "space0",
    display: "flex",
    flexWrap: "wrap",
    rowGap: "space30",
    columnGap: "space30"
  }), props.children);
});
DisplayPillGroup.displayName = "DisplayPillGroup";
export {
  DisplayPill,
  DisplayPillGroup
};
