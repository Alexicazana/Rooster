var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __assign = Object.assign;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __rest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  __markAsModule(target);
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  if (module2 && module2.__esModule)
    return module2;
  return __exportStar(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", {value: module2, enumerable: true}), module2);
};

// src/index.tsx
__export(exports, {
  Modal: () => Modal,
  ModalBody: () => ModalBody,
  ModalContext: () => ModalContext,
  ModalDialogContent: () => ModalDialogContent,
  ModalDialogOverlay: () => ModalDialogOverlay,
  ModalFooter: () => ModalFooter,
  ModalFooterActions: () => ModalFooterActions,
  ModalHeader: () => ModalHeader,
  ModalHeading: () => ModalHeading,
  modalBodyStyles: () => modalBodyStyles,
  modalFooterStyles: () => modalFooterStyles,
  modalHeaderStyles: () => modalHeaderStyles,
  useModalContext: () => useModalContext
});

// src/Modal.tsx
var React2 = __toModule(require("react"));
var PropTypes = __toModule(require("prop-types"));
var import_styling_library = __toModule(require("@twilio-paste/styling-library"));
var import_animation_library = __toModule(require("@twilio-paste/animation-library"));
var import_box = __toModule(require("@twilio-paste/box"));
var import_theme = __toModule(require("@twilio-paste/theme"));
var import_modal_dialog_primitive = __toModule(require("@twilio-paste/modal-dialog-primitive"));

// src/ModalContext.tsx
var React = __toModule(require("react"));
var ModalContext = React.createContext(null);
var useModalContext = () => {
  const context = React.useContext(ModalContext);
  if (!context) {
    throw new Error("useModalContext must be used with ModalContextProvider");
  }
  return context;
};

// src/utils/consoleUtils.ts
var MARGIN_AMOUNT_BASED_ON_CALC_OFFSET = "80px";
function addConsoleHeightPatch() {
  if (document == null) {
    return;
  }
  const CONTENT_WRAPPER = document.querySelector("#content");
  const SIDEBAR_WRAPPER = document.querySelector("#sidebar-wrapper");
  if (CONTENT_WRAPPER != null) {
    CONTENT_WRAPPER.style.marginTop = MARGIN_AMOUNT_BASED_ON_CALC_OFFSET;
  }
  if (SIDEBAR_WRAPPER != null) {
    SIDEBAR_WRAPPER.style.marginTop = MARGIN_AMOUNT_BASED_ON_CALC_OFFSET;
  }
}
function removeConsoleHeightPatch() {
  if (document == null) {
    return;
  }
  const CONTENT_WRAPPER = document.querySelector("#content");
  const SIDEBAR_WRAPPER = document.querySelector("#sidebar-wrapper");
  if (CONTENT_WRAPPER != null) {
    CONTENT_WRAPPER.style.removeProperty("margin-top");
  }
  if (SIDEBAR_WRAPPER != null) {
    SIDEBAR_WRAPPER.style.removeProperty("margin-top");
  }
}

// src/Modal.tsx
var ModalDialogOverlay = import_animation_library.animated(import_styling_library.styled(import_modal_dialog_primitive.ModalDialogPrimitiveOverlay)(import_styling_library.css({
  position: "fixed",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  width: "100%",
  backgroundColor: "colorBackgroundOverlay",
  zIndex: "zIndex80"
}), import_theme.pasteBaseStyles));
var ModalDialogContent = import_animation_library.animated(import_styling_library.styled(import_modal_dialog_primitive.ModalDialogPrimitiveContent)(({size}) => import_styling_library.css({
  width: "100%",
  maxWidth: size === "wide" ? "size80" : "size60",
  maxHeight: "90%",
  minHeight: "170px",
  backgroundColor: "colorBackgroundBody",
  borderColor: "colorBorderWeak",
  borderRadius: "borderRadius20",
  borderStyle: "solid",
  borderWidth: "borderWidth10",
  boxShadow: "shadow",
  display: "flex",
  flexDirection: "column"
})));
var getAnimationStates = (isConsole) => ({
  from: {opacity: 0, transform: `scale(0.675)`},
  enter: {opacity: 1, transform: `scale(1)`},
  leave: isConsole ? null : {opacity: 0, transform: `scale(0.675)`},
  config: {
    mass: 0.5,
    tension: 370,
    friction: 26
  }
});
var Modal = React2.forwardRef((_a, ref) => {
  var {
    children,
    element = "MODAL",
    isOpen,
    onDismiss,
    allowPinchZoom = true,
    initialFocusRef,
    ariaLabelledby,
    size,
    __console_patch = false
  } = _a, props = __rest(_a, [
    "children",
    "element",
    "isOpen",
    "onDismiss",
    "allowPinchZoom",
    "initialFocusRef",
    "ariaLabelledby",
    "size",
    "__console_patch"
  ]);
  const transitions = import_animation_library.useTransition(isOpen, getAnimationStates(__console_patch));
  React2.useEffect(() => {
    if (__console_patch && isOpen) {
      addConsoleHeightPatch();
    }
    return () => {
      if (__console_patch) {
        removeConsoleHeightPatch();
      }
    };
  }, [isOpen, __console_patch]);
  return /* @__PURE__ */ React2.createElement(ModalContext.Provider, {
    value: {onDismiss}
  }, transitions((styles, item) => item && /* @__PURE__ */ React2.createElement(import_box.Box, {
    as: ModalDialogOverlay,
    onDismiss,
    allowPinchZoom,
    initialFocusRef,
    style: {opacity: styles.opacity},
    element: `${element}_OVERLAY`,
    variant: size
  }, /* @__PURE__ */ React2.createElement(import_box.Box, __assign(__assign({
    as: ModalDialogContent,
    "aria-labelledby": ariaLabelledby
  }, import_box.safelySpreadBoxProps(props)), {
    element,
    ref,
    style: styles,
    size,
    variant: size
  }), children))));
});
Modal.displayName = "Modal";
Modal.propTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string,
  isOpen: PropTypes.bool.isRequired,
  onDismiss: PropTypes.func.isRequired,
  allowPinchZoom: PropTypes.bool,
  size: PropTypes.oneOf(["default", "wide"]).isRequired,
  initialFocusRef: PropTypes.object,
  ariaLabelledby: PropTypes.string.isRequired
};

// src/ModalHeader.tsx
var React3 = __toModule(require("react"));
var PropTypes2 = __toModule(require("prop-types"));
var import_box2 = __toModule(require("@twilio-paste/box"));
var import_button = __toModule(require("@twilio-paste/button"));
var import_flex = __toModule(require("@twilio-paste/flex"));
var import_CloseIcon = __toModule(require("@twilio-paste/icons/cjs/CloseIcon"));

// src/styles.tsx
var modalHeaderStyles = {
  borderBottomStyle: "solid",
  borderBottomWidth: "borderWidth10",
  borderBottomColor: "colorBorderWeaker",
  padding: "space50",
  margin: "space0",
  flexShrink: 0
};
var modalBodyStyles = {
  overflowY: "auto",
  padding: "space50",
  paddingBottom: "space60"
};
var modalFooterStyles = {
  borderTopStyle: "solid",
  borderTopWidth: "borderWidth10",
  borderTopColor: "colorBorderWeaker",
  padding: "space50",
  display: "flex",
  flexShrink: 0
};

// src/ModalHeader.tsx
var ModalHeader = React3.forwardRef((_a, ref) => {
  var {children, element = "MODAL_HEADER"} = _a, props = __rest(_a, ["children", "element"]);
  const {onDismiss} = useModalContext();
  return /* @__PURE__ */ React3.createElement(import_box2.Box, __assign(__assign(__assign(__assign({}, import_box2.safelySpreadBoxProps(props)), {
    as: "header"
  }), modalHeaderStyles), {
    element,
    ref
  }), /* @__PURE__ */ React3.createElement(import_flex.Flex, {
    hAlignContent: "between"
  }, /* @__PURE__ */ React3.createElement(import_flex.Flex, {
    vAlignContent: "center",
    grow: 1,
    marginRight: "space70"
  }, children), /* @__PURE__ */ React3.createElement(import_button.Button, {
    element: `${element}_CLOSE_BUTTON`,
    variant: "secondary_icon",
    size: "reset",
    onClick: () => onDismiss()
  }, /* @__PURE__ */ React3.createElement(import_CloseIcon.CloseIcon, {
    element: `${element}_CLOSE_ICON`,
    decorative: false,
    color: "colorTextWeak",
    size: "sizeIcon60",
    title: "Close modal"
  }))));
});
ModalHeader.displayName = "ModalHeader";
ModalHeader.propTypes = {
  children: PropTypes2.node.isRequired,
  element: PropTypes2.string
};

// src/ModalHeading.tsx
var React4 = __toModule(require("react"));
var PropTypes3 = __toModule(require("prop-types"));
var import_heading = __toModule(require("@twilio-paste/heading"));
var ModalHeading = React4.forwardRef((_a, ref) => {
  var {children, as = "h2", element = "MODAL_HEADING"} = _a, props = __rest(_a, ["children", "as", "element"]);
  return /* @__PURE__ */ React4.createElement(import_heading.Heading, __assign(__assign({}, props), {
    as,
    element,
    marginBottom: "space0",
    variant: "heading30",
    ref
  }), children);
});
ModalHeading.displayName = "ModalHeading";
ModalHeading.propTypes = {
  children: PropTypes3.node.isRequired,
  as: PropTypes3.oneOf(["h1", "h2", "h3", "h4", "h5", "h6"]),
  element: PropTypes3.string
};

// src/ModalBody.tsx
var React5 = __toModule(require("react"));
var PropTypes4 = __toModule(require("prop-types"));
var import_box3 = __toModule(require("@twilio-paste/box"));
var ModalBody = React5.forwardRef((_a, ref) => {
  var {children, element = "MODAL_BODY"} = _a, props = __rest(_a, ["children", "element"]);
  return /* @__PURE__ */ React5.createElement(import_box3.Box, __assign(__assign(__assign({}, import_box3.safelySpreadBoxProps(props)), modalBodyStyles), {
    as: "div",
    element,
    ref
  }), children);
});
ModalBody.displayName = "ModalBody";
ModalBody.propTypes = {
  children: PropTypes4.node.isRequired,
  element: PropTypes4.string
};

// src/ModalFooter.tsx
var React6 = __toModule(require("react"));
var PropTypes5 = __toModule(require("prop-types"));
var import_box4 = __toModule(require("@twilio-paste/box"));
var ModalFooter = React6.forwardRef((_a, ref) => {
  var {children, element = "MODAL_FOOTER"} = _a, props = __rest(_a, ["children", "element"]);
  return /* @__PURE__ */ React6.createElement(import_box4.Box, __assign(__assign(__assign({}, import_box4.safelySpreadBoxProps(props)), modalFooterStyles), {
    as: "footer",
    element,
    ref
  }), children);
});
ModalFooter.displayName = "ModalFooter";
ModalFooter.propTypes = {
  children: PropTypes5.node.isRequired,
  element: PropTypes5.string
};

// src/ModalFooterActions.tsx
var React7 = __toModule(require("react"));
var PropTypes6 = __toModule(require("prop-types"));
var import_box5 = __toModule(require("@twilio-paste/box"));
var ModalFooterActions = React7.forwardRef(({children, element = "MODAL_FOOTER_ACTIONS", justify}, ref) => {
  const count = React7.Children.count(children);
  return /* @__PURE__ */ React7.createElement(import_box5.Box, {
    display: "flex",
    justifyContent: justify === "start" ? "flex-start" : "flex-end",
    flexShrink: justify === "start" ? null : 0,
    flexWrap: "wrap",
    flexGrow: 1,
    element,
    alignItems: "center",
    ref
  }, React7.Children.map(children, (child, index) => {
    return /* @__PURE__ */ React7.createElement(import_box5.Box, {
      marginRight: count !== index + 1 ? "space50" : null,
      element: `${element}_ITEM`
    }, child);
  }));
});
ModalFooterActions.displayName = "ModalFooterActions";
ModalFooterActions.propTypes = {
  children: PropTypes6.node.isRequired,
  element: PropTypes6.string,
  justify: PropTypes6.oneOf(["start", "end"])
};
